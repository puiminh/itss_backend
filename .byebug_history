c
`exit
continue
by_user_id
user_id
continue
response
JSON.parse(response.body, symbolize_names: true)
example: JSON.parse(response.body, symbolize_names: true)
example.metadata[:response][:content]
example.metadata[:response]
example.metadata
example
exmaple
continue
rating.user
rating
continue
rating
star
start
continue
star
user_id
continue
rating
continue
rating
continue
params[:star]
rating
continue
rating
continue
1
continue
Notice.count
continue
@deleted_collection
Collection.all
params[:collection_id]
@delted_collection
continue
notice
continue
notice
continue
msg
Notice.count
Notice.all
continue
@deleted_collection.author.id
params[:by_user_id]
Collection.all
collection_id
collection
@deleted_collection
continue
Collection.last
Collection.find(4)
Collection.find(4
collection_id
by_user_id
continue
comment.user
comment.course
comment
continue
comment
continue
user.cousrse.
User.all
comment
continue
comment.user
comment
continue
Course.al
User.all
continue
comment
continue
comment
continue
Comment.all
Comment.count
User.all
comment.user_id
comment.content
continue
params[:deleted_by_user_id]
params[:course_id]
msg
continue
User.count
User.all
course3.author
course1.author
course2.author
course2.id
continue
user2.id
course_id
deleted_by_user_id
continue
course2
Course.all
continue
Course.count
continue
Course.all
continue
Course.count
i2
i1
continue
course1
User.count
User.all
Course.count
Course.all
continue
Course.all
Course.count
id
course2.author
course2
continue
user.id
user = create(:user)
User.last
stub.id
stub["id"]
stub["id]
stub
att
att =  attributes_for(:user)
stub
stub = build_stubbed(:user)
 attributes_for(:user)["id"]
 attributes_for(:user).id
 attributes_for(:user)
continue
User.count
User.all
response
continue
JSON.parse(response.body[:data])
JSON.parse(res
JSON.parse(response.body)[:data]
JSON.parse(response.body)["data"]
JSON.parse(response.body)["data"]]
JSON.parse(response.body).data
JSON.parse(response.body)
_
rs = _
JSON.parse(response.body)
JSON.parse(response.body.data)
response.body.data
response.body
continue
response
User.all
continue
User.all
response.body
response
exit
continue
current_user
continue
current_user
continue
current_user.id
current_user
continue
current_user
continue
current_user
continue
current_user
continue
current_user
continue
current_user
continue
@user
continue
params[:email]
continue
@user
continue
params
continue
params
continue
user_params["password_confirmation"]
user_params["email"]
user_params["password"]
user_params.password
user_params
User.new(user_params)
continue
render json: {error: "eh"}, head: :unprocessable_entity
render json: {error: "eh"}, head :unprocessable_entity
continue
@user.save!
@user.save
continue
user_params
@user.email
@user.password
@user.passwor
@user.password
@user
params[:password]
@user
user_params
@user.errors.full_messages
@user.errors
error
@user.save
@user.encrypted_password
@user.password
User.where('email','nguyenhuylinhvt98@gmail')
@user.save
@user
