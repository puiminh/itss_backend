---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/bookmark_collections":
    get:
      summary: list bookmark_collections
      tags:
      - Bookmark collections
      responses:
        '200':
          description: successful
    post:
      summary: create bookmark_collection
      tags:
      - Bookmark collections
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                collection_id:
                  type: integer
              required:
              - user_id
              - collection_id
  "/api/v1/bookmark_collections/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show bookmark_collection
      tags:
      - Bookmark collections
      responses:
        '200':
          description: successful
    put:
      summary: update bookmark_collection
      tags:
      - Bookmark collections
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                collection_id:
                  type: integer
              required:
              - user_id
              - collection_id
    delete:
      summary: delete bookmark_collection
      tags:
      - Bookmark collections
      responses:
        '200':
          description: successful
  "/api/v1/bookmark_courses":
    get:
      summary: list bookmark_courses
      tags:
      - Bookmark course
      responses:
        '200':
          description: successful
    post:
      summary: create bookmark_course
      tags:
      - Bookmark course
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                course_id:
                  type: integer
              required:
              - user_id
              - course_id
  "/api/v1/bookmark_courses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show bookmark_course
      tags:
      - Bookmark course
      responses:
        '200':
          description: successful
    put:
      summary: update bookmark_course
      tags:
      - Bookmark course
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                course_id:
                  type: integer
              required:
              - user_id
              - course_id
    delete:
      summary: delete bookmark_course
      tags:
      - Bookmark course
      responses:
        '200':
          description: successful
  "/api/v1/collections/course":
    post:
      summary: add_course_to_collection collections_course
      tags:
      - Course collections
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                collection_id:
                  type: integer
              required:
              - course_id
              - collection_id
  "/api/v1/collections/courses":
    post:
      summary: collection_with_courses collections_course
      tags:
      - Course collections
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                collection:
                  type: object
                  properties:
                    title:
                      type: string
                    desc:
                      type: string
                    image:
                      type: string
                    author_id:
                      type: integer
                courses:
                  type: array
                  items:
                    type: integer
              required:
              - collection
              - courses
  "/api/v1/courses_collections/{type}/{keyword}":
    parameters:
    - name: type
      in: path
      description: type
      required: true
      schema:
        type: string
    - name: keyword
      in: path
      description: keyword
      required: true
      schema:
        type: string
    get:
      summary: keyword_find collections_course
      tags:
      - Course collections
      responses:
        '200':
          description: successful
  "/api/v1/collections_courses":
    get:
      summary: list collections_courses
      tags:
      - Course collections
      responses:
        '200':
          description: successful
    post:
      summary: create collections_course
      tags:
      - Course collections
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                collection_id:
                  type: integer
              required:
              - course_id
              - collection_id
  "/api/v1/collections_courses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show collections_course
      tags:
      - Course collections
      responses:
        '200':
          description: successful
    put:
      summary: update collections_course
      tags:
      - Course collections
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                collection_id:
                  type: integer
              required:
              - course_id
              - collection_id
    delete:
      summary: delete collections_course
      tags:
      - Course collections
      responses:
        '200':
          description: successful
  "/api/v1/collections/recommended":
    get:
      summary: recommended_collections collection
      tags:
      - Collections
      responses:
        '200':
          description: successful
  "/api/v1/collections/last_week":
    get:
      summary: new_collections_last_week collection
      tags:
      - Collections
      responses:
        '200':
          description: successful
  "/api/v1/collections/total":
    get:
      summary: total collection
      tags:
      - Collections
      responses:
        '200':
          description: successful
  "/api/v1/collections/created/{user_id}":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: created_collections collection
      tags:
      - Collections
      responses:
        '200':
          description: successful
  "/api/v1/collections/courses/{collection_id}":
    put:
      summary: update_collection_courses collection
      tags:
      - Collections
      parameters:
      - name: collection_id
        in: path
        description: collection_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                collection:
                  type: object
                  properties:
                    title:
                      type: string
                    desc:
                      type: string
                courses:
                  type: array
                  items:
                    type: integer
              required:
              - collection
              - course
  "/api/v1/collections/{collection_id}/{by_user_id}":
    delete:
      summary: Delete a collection
      tags:
      - Collections
      parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: by_user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Deleted collection
  "/api/v1/collections":
    get:
      summary: list collections
      tags:
      - Collections
      responses:
        '200':
          description: successful
    post:
      summary: create collection
      tags:
      - Collections
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: object
                desc:
                  type: string
                image:
                  type: string
                author_id:
                  type: integer
              required:
              - title
              - author_id
  "/api/v1/collections/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show collection
      tags:
      - Collections
      responses:
        '200':
          description: successful
    put:
      summary: update collection
      tags:
      - Collections
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                desc:
                  type: string
                image:
                  type: string
  "/api/v1/comments":
    get:
      summary: Get all comments
      tags:
      - Comments
      responses:
        '200':
          description: Get all comments
    post:
      summary: Create new comment
      tags:
      - Comments
      parameters: []
      responses:
        '201':
          description: Create new comment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                user_id:
                  type: integer
                course_id:
                  type: integer
              required:
              - user_id
              - content
              - course_id
            examples:
              example:
                summary: Request example description
                value:
                  content: Foo
                  user_id: 1
                  course_id: 2
  "/api/v1/comments/course/{course_id}":
    get:
      summary: Get all course comments
      tags:
      - Comments
      parameters:
      - name: course_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Get all course comments
  "/api/v1/comments/last_week":
    get:
      summary: Get new user information for the week
      tags:
      - Comments
      responses:
        '200':
          description: Get new user information for the week
  "/api/v1/comments/total":
    get:
      summary: Total comments
      tags:
      - Comments
      responses:
        '200':
          description: Total comments
  "/api/v1/comments/{comment_id}/{by_user_id}":
    delete:
      summary: Delete a comment
      tags:
      - Comments
      parameters:
      - name: comment_id
        in: path
        required: true
        schema:
          type: string
      - name: by_user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Deleted comment
  "/api/v1/comments/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show comment
      tags:
      - Comments
      responses:
        '200':
          description: successful
    put:
      summary: update comment
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                user_id:
                  type: integer
                course_id:
                  type: integer
              required:
              - user_id
              - content
              - course_id
  "/api/v1/courses/recent/{user_id}":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: recent course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/recommended":
    get:
      summary: recommended_courses course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/last_week":
    get:
      summary: new_courses_last_week course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/total":
    get:
      summary: total course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/{course_id}/random_list_word":
    parameters:
    - name: course_id
      in: path
      description: course_id
      required: true
      schema:
        type: string
    get:
      summary: random_list_word course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/created/{user_id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: created_courses course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/duplicate/{user_id}":
    post:
      summary: duplicate course
      tags:
      - Courses
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: Duplicated course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
              required:
              - course_id
  "/api/v1/courses/vocabularies":
    post:
      summary: course_with_vocabularies course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    title:
                      type: string
                    desc:
                      type: string
                    author_id:
                      type: integer
                vocabs:
                  type: array
                  items:
                    type: object
                    properties:
                      word:
                        type: string
                      link:
                        type: string
                      define:
                        type: string
                      kind:
                        type: integer
              required:
              - course
              - vocabs
  "/api/v1/courses/vocabularies/{course_id}":
    put:
      summary: Update course vocabularies
      tags:
      - Courses
      parameters:
      - name: course_id
        in: path
        description: course id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: object
                  properties:
                    title:
                      type: string
                    desc:
                      type: string
                vocabs:
                  type: array
                  items:
                    type: object
                    properties:
                      word:
                        type: string
                      link:
                        type: string
                      define:
                        type: string
                      kind:
                        type: integer
              required:
              - course
              - vocabs
  "/api/v1/courses/{course_id}/{by_user_id}":
    parameters:
    - name: course_id
      in: path
      description: course_id
      required: true
      schema:
        type: string
    - name: by_user_id
      in: path
      description: by_user_id
      required: true
      schema:
        type: string
    delete:
      summary: delete course with notify
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses":
    get:
      summary: list courses
      tags:
      - Courses
      responses:
        '200':
          description: successful
    post:
      summary: create course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                desc:
                  type: string
                author_id:
                  type: integer
              required:
              - title
              - author_id
  "/api/v1/courses/{id}":
    parameters:
    - name: id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: show course
      tags:
      - Courses
      responses:
        '200':
          description: successful
    put:
      summary: update course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          apllication/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                desc:
                  type: string
              required:
              - title
  "/api/v1/notices/user/{user_id}":
    parameters:
    - name: user_id
      in: path
      description: user id
      required: true
      schema:
        type: string
    get:
      summary: Get a user's notifications'
      tags:
      - Notices
      responses:
        '200':
          description: successful
    put:
      summary: Mark the user who has seen all notifications
      tags:
      - Notices
      responses:
        '200':
          description: successful
  "/api/v1/notices":
    get:
      summary: List notices
      tags:
      - Notices
      responses:
        '200':
          description: successful
  "/api/v1/progress/{course_id}/{user_id}":
    parameters:
    - name: course_id
      in: path
      description: course_id
      required: true
      schema:
        type: string
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: user_progress_course progress
      tags:
      - Progresses
      responses:
        '200':
          description: successful
  "/api/v1/progress/{user_id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: user_progress progress
      tags:
      - Progresses
      responses:
        '200':
          description: successful
  "/api/v1/progress/update":
    post:
      summary: update_progress progress
      tags:
      - Progresses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                point:
                  type: integer
                user_id:
                  type: integer
                course_id:
                  type: integer
                vocabulary_id:
                  type: integer
              required:
              - point
              - user_id
              - course_id
              - vocabulary_id
  "/api/v1/progresses":
    get:
      summary: list progresses
      tags:
      - Progresses
      responses:
        '200':
          description: successful
    post:
      summary: create progress
      tags:
      - Progresses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                point:
                  type: integer
                user_id:
                  type: integer
                course_id:
                  type: integer
                vocabulary_id:
                  type: integer
              required:
              - point
              - user_id
              - course_id
              - vocabulary_id
  "/api/v1/progresses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show progress
      tags:
      - Progresses
      responses:
        '200':
          description: successful
    put:
      summary: update progress
      tags:
      - Progresses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                point:
                  type: integer
                user_id:
                  type: integer
                course_id:
                  type: integer
                vocabulary_id:
                  type: integer
              required:
              - point
              - user_id
              - course_id
              - vocabulary_id
    delete:
      summary: delete progress
      tags:
      - Progresses
      responses:
        '200':
          description: successful
  "/api/v1/ratings/course/{course_id}":
    parameters:
    - name: course_id
      in: path
      description: course_id
      required: true
      schema:
        type: string
    get:
      summary: course_rating rating
      tags:
      - Ratings
      responses:
        '200':
          description: successful
  "/api/v1/ratings":
    get:
      summary: list ratings
      tags:
      - Ratings
      responses:
        '200':
          description: successful
    post:
      summary: Rating course
      tags:
      - Ratings
      parameters: []
      responses:
        '201':
          description: Rated course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                star:
                  type: integer
                user_id:
                  type: integer
                course_id:
                  type: integer
              required:
              - star
              - user_id
              - course_id
  "/api/v1/ratings/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show rating
      tags:
      - Ratings
      responses:
        '200':
          description: successful
    put:
      summary: update rating
      tags:
      - Ratings
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                star:
                  type: integer
                user_id:
                  type: integer
                course_id:
                  type: integer
              required:
              - star
              - user_id
              - course_id
    delete:
      summary: delete rating
      tags:
      - Ratings
      responses:
        '200':
          description: successful
  "/api/v1/users":
    post:
      summary: create user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                  required:
                  - email
                  - password
                  - password_confirmation
    get:
      summary: list users
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/v1/users/last_week":
    get:
      summary: new_users_last_week user
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/v1/users/total":
    get:
      summary: total user
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/v1/users/created/courses_collections/{user_id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: created_courses_collections user
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/v1/users/bookmarked/courses_collections/{user_id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: bookmarked_courses_collections user
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    put:
      summary: update user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                role:
                  type: integer
                first_name:
                  type: string
                last_name:
                  type: string
              required:
              - title
              - content
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - Users
      responses:
        '200':
          description: successful
    delete:
      summary: delete user
      tags:
      - Users
      responses:
        '200':
          description: successful
  "/api/v1/vocabularies/need/{user_id}/{course_id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    - name: course_id
      in: path
      description: course_id
      required: true
      schema:
        type: string
    get:
      summary: need_learn vocabulary
      tags:
      - Vocabularies
      responses:
        '200':
          description: successful
  "/api/v1/vocabularies":
    get:
      summary: list vocabularies
      tags:
      - Vocabularies
      responses:
        '200':
          description: successful
    post:
      summary: create vocabulary
      tags:
      - Vocabularies
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                word:
                  type: string
                define:
                  type: string
                link:
                  type: string
                kind:
                  type: string
                course_id:
                  type: integer
              required:
              - word
              - course_id
              - define
  "/api/v1/vocabularies/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show vocabulary
      tags:
      - Vocabularies
      responses:
        '200':
          description: successful
    put:
      summary: update vocabulary
      tags:
      - Vocabularies
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                word:
                  type: string
                define:
                  type: string
                link:
                  type: string
                kind:
                  type: string
                course_id:
                  type: integer
              required:
              - word
              - course_id
              - define
    delete:
      summary: delete vocabulary
      tags:
      - Vocabularies
      responses:
        '200':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
